# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0


name: $(SourceBranchName)-$(Date:yyyyMMdd).$(Rev:r)
trigger:
  - main
pr:
  - main

variables:
  GO_VERSION: 1.15
  GOPATH: $(Agent.BuildDirectory)/go

jobs:
  - job: Checks
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - script: make checks
        displayName: Run checks

  - job: UnitTest
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - script: make unit-test
        displayName: Run unit test
      - script: bash <(curl https://codecov.io/bash) -t $CODECOV_UPLOAD_TOKEN
        env:
          CODECOV_UPLOAD_TOKEN: $(CODECOV_UPLOAD_TOKEN)
        displayName: Upload coverage to Codecov

  - job: BDDTest
    pool:
      vmImage: ubuntu-18.04
    strategy:
      parallel: 9
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          echo '127.0.0.1 testnet.orb.local' | sudo tee -a /etc/hosts
          echo '127.0.0.1 edv.rest.example.com' | sudo tee -a /etc/hosts
          echo '127.0.0.1 vault.kms.example.com' | sudo tee -a /etc/hosts
          make bdd-test
        displayName: Run BDD tests

  - job: Publish
    dependsOn:
      - Checks
      - UnitTest
      - BDDTest
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          function logout {
            docker logout
          }
          trap logout EXIT
          source ci/version_var.sh
          echo $DOCKER_PASSWORD | docker login ghcr.io --username $DOCKER_USER --password-stdin
          make vc-server-docker
          docker tag ghcr.io/trustbloc/vc-server:latest ${VC_SERVER_PKG}:${VC_SERVER_TAG}
          docker push ${VC_SERVER_PKG}:${VC_SERVER_TAG}
          make did-resolver-docker
          docker tag ghcr.io/trustbloc/did-resolver:latest ${DID_RESOLVER_PKG}:${DID_RESOLVER_TAG}
          docker push ${DID_RESOLVER_PKG}:${DID_RESOLVER_TAG}
          make comparator-rest-docker
          docker tag ghcr.io/trustbloc/comparator-server:latest ${COMPARATOR_SERVER_PKG}:${COMPARATOR_SERVER_TAG}
          docker push ${COMPARATOR_SERVER_PKG}:${COMPARATOR_SERVER_TAG}
          make confidential-storage-hub-docker
          docker tag ghcr.io/trustbloc/hub-confidential-storage:latest ${CONFIDENTIAL_STORAGE_HUB_PKG}:${CONFIDENTIAL_STORAGE_HUB_TAG}
          docker push ${CONFIDENTIAL_STORAGE_HUB_PKG}:${CONFIDENTIAL_STORAGE_HUB_TAG}
          make vault-server-docker
          docker tag ghcr.io/trustbloc/vault-server:latest ${VAULT_SERVER_PKG}:${VAULT_SERVER_TAG}
          docker push ${VAULT_SERVER_PKG}:${VAULT_SERVER_TAG}
        env:
          DOCKER_USER: $(DOCKER_USER)
          DOCKER_PASSWORD: $(DOCKER_PASSWORD)

  - job: Interop
    condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
    pool:
      vmImage: ubuntu-18.04
    timeoutInMinutes: 30
    steps:
      - template: azp-dependencies.yml
      - checkout: self
      - bash: |
          make bdd-interop-test
        displayName: Run interop tests
