
#
# Copyright SecureKey Technologies Inc. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#
version: '2'

services:

  issuer.vc.rest.example.com:
    container_name: issuer.vc.rest.example.com
    image: ${VC_REST_IMAGE}:latest
    environment:
      - VC_REST_HOST_URL=${ISSUER_VC_HOST}:${ISSUER_VC_PORT}
      - VC_REST_HOST_URL_EXTERNAL=http://issuer.vc.rest.example.com:${ISSUER_VC_PORT}
      - EDV_REST_HOST_URL=${EDV_HOST}:${EDV_PORT}${EDV_ROOT_ENDPOINT}
      - BLOC_DOMAIN=testnet.orb.local
      - UNIVERSAL_RESOLVER_HOST_URL=http://did.rest.example.com:8072/1.0/identifiers
      - DATABASE_TYPE=mongodb
      - DATABASE_URL=mongodb://mongodb.example.com:27017
      - DATABASE_PREFIX=issuer_
      - KMSSECRETS_DATABASE_TYPE=mongodb
      - KMSSECRETS_DATABASE_URL=mongodb://mongodb.example.com:27017
      - KMSSECRETS_DATABASE_PREFIX=issuer_
      - VC_REST_MODE=issuer
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_TLS_SYSTEMCERTPOOL=true
      - VC_REST_API_TOKEN=rw_token
      - VC_REST_REQUEST_TOKENS=csl=rw_token,sidetreeToken=tk1
      - VC_REST_DID_ANCHOR_ORIGIN=https://testnet.orb.local
      - VC_REST_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
    ports:
      - ${ISSUER_VC_PORT}:${ISSUER_VC_PORT}
    entrypoint: ""
    command:  /bin/sh -c "sleep 5;vc-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      - mongodb_bdd_net

  verifier.vc.rest.example.com:
    container_name: verifier.vc.rest.example.com
    image: ${VC_REST_IMAGE}:latest
    environment:
      - VC_REST_HOST_URL=${VERIFIER_VC_HOST}:${VERIFIER_VC_PORT}
      - VC_REST_HOST_URL_EXTERNAL=http://verifier.vc.rest.example.com:${VERIFIER_VC_PORT}
      - EDV_REST_HOST_URL=${EDV_HOST}:${EDV_PORT}${EDV_ROOT_ENDPOINT}
      - BLOC_DOMAIN=testnet.orb.local
      - UNIVERSAL_RESOLVER_HOST_URL=http://did.rest.example.com:8072/1.0/identifiers
      - DATABASE_TYPE=mongodb
      - DATABASE_URL=mongodb://mongodb.example.com:27017
      - DATABASE_PREFIX=verifier_
      - KMSSECRETS_DATABASE_TYPE=mongodb
      - KMSSECRETS_DATABASE_URL=mongodb://mongodb.example.com:27017
      - KMSSECRETS_DATABASE_PREFIX=verifier_
      - VC_REST_MODE=verifier
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_API_TOKEN=rw_token
      - VC_REST_REQUEST_TOKENS=csl=rw_token,sidetreeToken=tk1
      - VC_REST_DID_ANCHOR_ORIGIN=https://testnet.orb.local
      - VC_REST_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
    ports:
      - ${VERIFIER_VC_PORT}:${VERIFIER_VC_PORT}
    entrypoint: ""
    command:  /bin/sh -c "sleep 5;vc-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      - mongodb_bdd_net

  holder.vc.rest.example.com:
    container_name: holder.vc.rest.example.com
    image: ${VC_REST_IMAGE}:latest
    environment:
      - VC_REST_HOST_URL=${HOLDER_VC_HOST}:${HOLDER_VC_PORT}
      - VC_REST_HOST_URL_EXTERNAL=http://holder.vc.rest.example.com:${HOLDER_VC_PORT}
      - EDV_REST_HOST_URL=${EDV_HOST}:${EDV_PORT}${EDV_ROOT_ENDPOINT}
      - BLOC_DOMAIN=testnet.orb.local
      - UNIVERSAL_RESOLVER_HOST_URL=http://did.rest.example.com:8072/1.0/identifiers
      - DATABASE_TYPE=mongodb
      - DATABASE_URL=mongodb://mongodb.example.com:27017
      - DATABASE_PREFIX=holder_
      - KMSSECRETS_DATABASE_TYPE=mongodb
      - KMSSECRETS_DATABASE_URL=mongodb://mongodb.example.com:27017
      - KMSSECRETS_DATABASE_PREFIX=holder_
      - VC_REST_MODE=holder
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_TLS_SYSTEMCERTPOOL=true
      - VC_REST_API_TOKEN=rw_token
      - VC_REST_REQUEST_TOKENS=csl=rw_token,sidetreeToken=tk1
      - VC_REST_DID_ANCHOR_ORIGIN=https://testnet.orb.local
      - VC_REST_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
    ports:
      - ${HOLDER_VC_PORT}:${HOLDER_VC_PORT}
    entrypoint: ""
    command:  /bin/sh -c "sleep 5;vc-rest start"
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      - mongodb_bdd_net

  governance.vc.rest.example.com:
    container_name: governance.vc.rest.example.com
    image: ${VC_REST_IMAGE}:latest
    environment:
      - VC_REST_HOST_URL=${GOVERNANCE_VC_HOST}:${GOVERNANCE_VC_PORT}
      - VC_REST_HOST_URL_EXTERNAL=http://governance.vc.rest.example.com:${GOVERNANCE_VC_PORT}
      - EDV_REST_HOST_URL=${EDV_HOST}:${EDV_PORT}${EDV_ROOT_ENDPOINT}
      - BLOC_DOMAIN=testnet.orb.local
      - UNIVERSAL_RESOLVER_HOST_URL=http://did.rest.example.com:8072/1.0/identifiers
      - DATABASE_TYPE=mysql
      - DATABASE_URL=vcs:vcs-secret-pw@tcp(mysql:3306)/?interpolateParams=true&multiStatements=true
      - KMSSECRETS_DATABASE_TYPE=mysql
      - KMSSECRETS_DATABASE_URL=vcs:vcs-secret-pw@tcp(mysql:3306)/
      - VC_REST_MODE=governance
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_TLS_SYSTEMCERTPOOL=true
      - VC_REST_API_TOKEN=rw_token
      - VC_REST_REQUEST_TOKENS=csl=rw_token,sidetreeToken=tk1
      - VC_REST_GOVERNANCE_CLAIMS_FILE=/etc/governance_claims.json
      - VC_REST_DID_ANCHOR_ORIGIN=https://testnet.orb.local
      - VC_REST_CONTEXT_PROVIDER_URL=${CONTEXT_PROVIDER_URL}
    ports:
      - ${GOVERNANCE_VC_PORT}:${GOVERNANCE_VC_PORT}
    entrypoint: ""
    command:  /bin/sh -c "sleep 20;vc-rest start"
    volumes:
      - ../keys/tls:/etc/tls
      - ./governance_claims.json:/etc/governance_claims.json
    networks:
      - mongodb_bdd_net

  vc.rest.example.com:
    container_name: vc.rest.example.com
    image: ${VC_REST_IMAGE}:latest
    environment:
      - VC_REST_HOST_URL=${VC_REST_HOST}:${VC_REST_PORT}
      - VC_REST_HOST_URL_EXTERNAL=http://vc.rest.example.com:${VC_REST_PORT}
      - EDV_REST_HOST_URL=${EDV_HOST}:${EDV_PORT}${EDV_ROOT_ENDPOINT}
      - BLOC_DOMAIN=testnet.orb.local
      - UNIVERSAL_RESOLVER_HOST_URL=http://did.rest.example.com:8072/1.0/identifiers
      - DATABASE_TYPE=mem
      - KMSSECRETS_DATABASE_TYPE=mem
      - VC_REST_TLS_CACERTS=/etc/tls/ec-cacert.pem
      - VC_REST_DID_ANCHOR_ORIGIN=https://testnet.orb.local
    ports:
      - ${VC_REST_PORT}:${VC_REST_PORT}
    command:  start
    volumes:
      - ../keys/tls:/etc/tls
    networks:
      - mongodb_bdd_net

  file-server.example.com: # file server for hosting static resources (e.g. JSON-LD contexts)
    container_name: file-server.example.com
    image: halverneus/static-file-server:latest
    environment:
      - PORT=10096
      - FOLDER=/data
      - TLS_CERT=/etc/tls/ec-pubCert.pem
      - TLS_KEY=/etc/tls/ec-key.pem
    ports:
      - "10096:10096"
    volumes:
      - ./data:/data
      - ../keys/tls:/etc/tls
    networks:
      - mongodb_bdd_net

networks:
  mongodb_bdd_net:
    external: true
