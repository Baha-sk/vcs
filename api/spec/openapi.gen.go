// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
