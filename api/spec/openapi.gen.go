// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AP//kQ3Ze74uAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
