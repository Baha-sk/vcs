// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"rDW0TzYAAA==",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
