// Package spec provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.0 DO NOT EDIT.
package spec

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	var res = make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	var resolvePath = PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		var pathToFile = url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
